[tool.black]
line-length = 120
#force-exclude = '''
#/(
#    example/path
#)/
#'''

[tool.pylint.main]
ignore = ["tests", "mock", "setup.py", "pkgInfo.py"]
ignore-paths = ["^venv$"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "import-error",
    "logging-fstring-interpolation",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-member",
    "no-name-in-module",
    "too-many-instance-attributes",
]
enable = ["useless-suppression"]
argument-rgx = "[a-z_][a-z0-9_]{0,34}$"
attr-rgx = "[a-z_][a-z0-9_]{1,34}$"
const-rgx = "[A-Za-z_][A-Za-z0-9_]{1,34}$"
variable-rgx = "[a-z_][a-z0-9_]{0,34}$"

[tool.poetry]
name = "carma"
version = "0.1.0"
description = "This is a collection of visual recognition modules serving as code base for CARMA"
authors = ["Joerg Deigmoeller <joerg.deigmoeller@honda-ri.de>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7"
black = "*"
ultralytics = "*"
pymongo = "*"
torch = "*"
torchvision = "*"
scipy = "*"
pillow = "*"
openai = "*"
timm = "*"
clip = { git = "https://github.com/openai/CLIP.git", branch = "main" }


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"